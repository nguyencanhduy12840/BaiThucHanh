@{
    Layout = "_Layout";
}
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Product>

@foreach (var product in Model)
{
    @await Html.PartialAsync("ProductPartial", product)
}

<nav aria-label="Page navigation example">
    <ul class="pagination" >
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions
        {
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" },
        PreviousElementClass = "page-item",
        NextElementClass = "page-item",
        UlElementClasses = new[] { "pagination", "pagination-flex" },
        LinkToPreviousPageFormat = "&laquo;",
        LinkToNextPageFormat = "&raquo;",
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        LinkToIndividualPageFormat = "{0}",
        ClassToApplyToFirstListItemInPager = "page-item",
        ClassToApplyToLastListItemInPager = "page-item"
        })
    </ul>
</nav>



<!-- Fruits Shop End-->
